set USINES;
set PAPIERS;
set SEMAINES;
param prix{USINES} >= 0;
param tonne_produite{USINES,PAPIERS} >= 0;
param quantite_demande{PAPIERS} >= 0;

var nb_jours{u in USINES} >=0;
var qte_produite{SEMAINES,PAPIERS} >=0;
var qte_stock{SEMAINES,PAPIERS} >=0;
var jours_ouvres{SEMAINES,USINES} >= 0;
var frais_hebdo{SEMAINES} >= 0;


minimize cout:
	sum{u in USINES} 
		prix[u] * nb_jours[u];
	
subject to max_prod_jours {p in PAPIERS} :
		sum{u in USINES}
			(nb_jours[u] * tonne_produite[u,p]) >= quantite_demande[p];

subject to max_prod {s in SEMAINES,p in PAPIERS}:
	sum{u in USINES}
		jours_ouvres[s,u] * tonne_produite[u,p] <= qte_produite[s,p];
